[{"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/index.tsx":"1","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/App.tsx":"2","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/styles/global.ts":"3","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Header/index.tsx":"4","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Header/styles.ts":"5","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Dashboard/index.tsx":"6","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Dashboard/styles.ts":"7","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Summary/index.tsx":"8","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Summary/styles.ts":"9","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/TransactionsTable/index.tsx":"10","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/TransactionsTable/styles.ts":"11","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/services/api.ts":"12","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/NewTransactionModal/index.tsx":"13","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/NewTransactionModal/styles.ts":"14","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/TransactionsContext.tsx":"15"},{"size":1091,"mtime":1618089286326,"results":"16","hashOfConfig":"17"},{"size":1009,"mtime":1618098890942,"results":"18","hashOfConfig":"17"},{"size":1777,"mtime":1617334401664,"results":"19","hashOfConfig":"17"},{"size":600,"mtime":1617329360835,"results":"20","hashOfConfig":"17"},{"size":607,"mtime":1617079071440,"results":"21","hashOfConfig":"17"},{"size":318,"mtime":1617081039467,"results":"22","hashOfConfig":"17"},{"size":149,"mtime":1617080377964,"results":"23","hashOfConfig":"17"},{"size":2343,"mtime":1618101305590,"results":"24","hashOfConfig":"17"},{"size":820,"mtime":1617080693203,"results":"25","hashOfConfig":"17"},{"size":1612,"mtime":1618100703401,"results":"26","hashOfConfig":"17"},{"size":781,"mtime":1617081803863,"results":"27","hashOfConfig":"17"},{"size":108,"mtime":1618069978569,"results":"28","hashOfConfig":"17"},{"size":3180,"mtime":1618100313380,"results":"29","hashOfConfig":"17"},{"size":1937,"mtime":1617773069908,"results":"30","hashOfConfig":"17"},{"size":1440,"mtime":1618100749642,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"3qre52",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/index.tsx",[],["67","68"],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/App.tsx",["69"],"import { Dashboard } from './components/Dashboard';\nimport {Header} from './components/Header';\nimport { GlobalStyle } from './styles/global';\nimport Modal from 'react-modal';\nimport {useState} from 'react';\nimport {NewTransactionModal} from './components/NewTransactionModal'\nimport { TransacionsProvider, TransactionContext } from './TransactionsContext';\n\nModal.setAppElement('#root');\n\nexport function App() {\n\n  const[isNewTransactionModalOpen, setIsNewTransactionModalOpen]= useState(false);\n  \n  function handleOpenNewTransactionModal(){\n      setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal(){\n      setIsNewTransactionModalOpen(false);\n  }\n\n  return (\n    <TransacionsProvider>\n      <Header onOpenNewTransactionModal = {handleOpenNewTransactionModal}/>\n      <Dashboard/>\n      <NewTransactionModal\n        isOpen={isNewTransactionModalOpen}\n        onResquestClose={handleCloseNewTransactionModal}\n      />\n      <GlobalStyle/>\n    </TransacionsProvider>\n  );\n}\n\n","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/styles/global.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Header/index.tsx",["70"],"import { useState } from \"react\"\nimport logoImg from \"../../assets/logo.svg\"\nimport { Container, Content } from \"./styles\"\n\n\ninterface HeaderProps{\n    onOpenNewTransactionModal: ()=>void;\n}\n\nexport function Header({onOpenNewTransactionModal}: HeaderProps){\n\n    return(\n        <Container>\n            <Content>\n                <img src={logoImg} alt=\"eb money\"/>\n                <button \n                id=\"type\"\n                onClick={onOpenNewTransactionModal}\n                >\n                    Nova transação\n                </button>\n            </Content>\n        </Container>\n    )\n}","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Header/styles.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Dashboard/index.tsx",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Dashboard/styles.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Summary/index.tsx",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/Summary/styles.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/TransactionsTable/index.tsx",["71","72","73"],"import { useContext, useEffect, useState } from 'react';\nimport { api } from '../../services/api';\nimport { TransactionContext } from '../../TransactionsContext';\nimport { Container } from './styles'\n\n\nexport function TransactionTable(){\n\n    const {transactions} = useContext(TransactionContext)\n\n\n    return(\n        <Container>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Título</th>\n                        <th>Valor</th>\n                        <th>Categoria</th>\n                        <th>Data</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n                        transactions.map(transaction=>(\n                            <tr key={transaction.id}>\n                                <td>{transaction.title}</td>\n                                <td className={transaction.type}>\n                                    {new Intl.NumberFormat('pt-BR',{\n                                        style: 'currency',\n                                        currency: 'BRL'\n                                    }).format(transaction.amount)}\n                                </td>\n                                <td>{transaction.category}</td>\n                                <td>\n                                    {new Intl.DateTimeFormat('pt-BR').format(new Date(transaction.createdAt))}\n                                </td>\n                            </tr>\n                        ))\n                    }                   \n                </tbody>\n            </table>\n        </Container>\n    );\n}","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/TransactionsTable/styles.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/services/api.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/NewTransactionModal/index.tsx",["74"],"import Modal from 'react-modal'\nimport { FormEvent, useState, useContext} from 'react'\nimport { api } from '../../services/api'\nimport { TransactionContext } from '../../TransactionsContext'\n\nimport closeImg from '../../assets/close.svg'\nimport incomeImg from '../../assets/income.svg'\nimport outcomeImg from '../../assets/outcome.svg'\n\nimport { Container, TransactionTypeContainer,RadioBox } from './styles'\n\ninterface NewTransactionModalProps{\n    isOpen: boolean;\n    onResquestClose: () => void;\n}\n\nexport function NewTransactionModal({isOpen, onResquestClose}:NewTransactionModalProps){\n\n    const [title, setTitle] = useState('');\n    const [amount, setAmount] = useState(0);\n    const [category, setCategory] = useState('');\n    const [type, setType] = useState('deposit')\n\n    const {createTransaction} = useContext(TransactionContext);\n\n    \n    async function handleCreateNewTransaction(event: FormEvent){\n      event.preventDefault();\n\n      await createTransaction({\n        title,\n        amount,\n        category,\n        type\n      })\n\n      setTitle('');\n      setAmount(0);\n      setCategory('');\n      setType('deposit');\n\n      onResquestClose();\n    }\n\n    return(\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={onResquestClose}\n          overlayClassName=\"react-modal-overlay\"\n          className=\"react-modal-content\"\n        >\n          <button \n            type=\"button\" \n            onClick={onResquestClose}\n            className=\"react-modal-close\"\n          >\n            <img src={closeImg} alt=\"Fechar modal\"/>\n          </button>\n\n          <Container>\n              <h2>Cadastrar transações</h2>\n              <input\n                placeholder=\"Título\"\n                value = {title}\n                onChange={event => setTitle(event.target.value)}\n              />\n              <input\n                type = \"number\"\n                placeholder=\"Valor\"\n                value = {amount}\n                onChange={event => setAmount(Number(event.target.value))}\n              />\n\n              <TransactionTypeContainer>\n                <RadioBox\n                  type=\"button\"\n                  onClick={() =>{setType('deposit');}}\n                  isActive={type === 'deposit'}\n                  activeColor=\"green\"\n                >\n                  <img src={incomeImg} alt=\"Entrada\"/>\n                  <span>Entrada</span>\n                </RadioBox>\n                <RadioBox\n                  type=\"button\"\n                  onClick={() =>{setType('withdraw');}}\n                  isActive={type === 'withdraw'}\n                  activeColor=\"red\"\n                >\n                  <img src={outcomeImg} alt=\"Saída\"/>\n                  <span>Saída</span>\n                </RadioBox>\n              </TransactionTypeContainer>\n\n              <input\n                placeholder=\"Categoria\"\n                value = {category}\n                onChange={event => setCategory(event.target.value)}\n              />\n              <button\n               type=\"submit\" \n               onClick={handleCreateNewTransaction}>\n                Cadastrar\n              </button>\n          </Container>\n      </Modal>\n    );\n}","/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/components/NewTransactionModal/styles.ts",[],"/home/erico/Unb/rocketseat/ignite/cap2/eb-money/src/TransactionsContext.tsx",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":31,"nodeType":"82","messageId":"83","endLine":7,"endColumn":49},{"ruleId":"80","severity":1,"message":"84","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":1,"column":22,"nodeType":"82","messageId":"83","endLine":1,"endColumn":31},{"ruleId":"80","severity":1,"message":"84","line":1,"column":33,"nodeType":"82","messageId":"83","endLine":1,"endColumn":41},{"ruleId":"80","severity":1,"message":"86","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"80","severity":1,"message":"87","line":29,"column":11,"nodeType":"82","messageId":"83","endLine":29,"endColumn":15},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'TransactionContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'api' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]